vim.cmd([[colorscheme numetal]])
vim.api.nvim_set_hl(0, "IncSearch", { link = "CurSearch" })
-- vim.api.nvim_set_hl(0, "GitSignsChangeLn", { fg = "#aab479", bold = true })
vim.api.nvim_set_hl(0, "GitSignsAdd", { fg = "#89e051" })
vim.api.nvim_set_hl(0, "GitSignsChangedelete", { fg = "#ee6978" })
vim.api.nvim_set_hl(0, "GitSignsDelete", { fg = "#ee6978" })
vim.api.nvim_set_hl(0, "GitSignsChange", { fg = "#f29926" })
vim.api.nvim_set_hl(0, "DiffText", { fg = "#15242e", bg = "#ebb076" })
vim.api.nvim_set_hl(0, "DiffChange", { fg = "#cac3ac" })
vim.api.nvim_set_hl(0, "NeoTreeCursorLine", { link = "DiffChange" })
vim.api.nvim_set_hl(0, "@variable", { link = "Normal" })
vim.api.nvim_set_hl(0, "@function.call", { link = "Normal" })
vim.api.nvim_set_hl(0, "Error", { fg = "#f27983" })
vim.api.nvim_set_hl(0, "ErrorMsg", { fg = "#f27983" })
vim.api.nvim_set_hl(0, "@field", { link = "Normal" })
vim.api.nvim_set_hl(0, "@text.literal", { link = "Normal" })
vim.api.nvim_set_hl(0, "VertSplit", { link = "Comment" })
vim.api.nvim_set_hl(0, "DiffDelete", { link = "NonText" })
vim.api.nvim_set_hl(0, "@keyword.return", { fg = "#f27983", italic = true })
vim.api.nvim_set_hl(0, "Repeat", { italic = true })
vim.api.nvim_set_hl(0, "@conditional", { italic = true })
vim.api.nvim_set_hl(0, "Visual", { bg = "#1a303f" })
-- vim.api.nvim_set_hl(0, "@keyword.function", { italic = true, fg = "#f27983" })
vim.api.nvim_set_hl(0, "Comment", { fg = "#446073", italic = false })
vim.api.nvim_set_hl(0, "@field", { link = "Error" })
vim.api.nvim_set_hl(0, "MsgSeparator", { link = "Error" })
vim.api.nvim_set_hl(0, "TelescopeBorder", { link = "Comment" })
vim.api.nvim_set_hl(0, "TelescopePromptBorder", { link = "NonText" })
vim.api.nvim_set_hl(0, "QuickFixLine", { link = "TabLineFill" })
vim.api.nvim_set_hl(0, "NeoTreeIndentMarker", { link = "Comment" })
vim.api.nvim_set_hl(0, "NeoTreeDirectoryIcon", { link = "@boolean" })
vim.api.nvim_set_hl(0, "LineNr", { fg = "#5c6773" })
vim.api.nvim_set_hl(0, "Normal", { bg = "none" })
vim.api.nvim_set_hl(0, "SignColumn", { bg = "none" })
